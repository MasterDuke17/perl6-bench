use 5.10.0;

use experimental 'switch';

my ($w, $h, $steps) = @ARGV;
my $r = "\033[H";
my $step = 0;

my ($green, $red, $norm) = ("\033[0;32m", "\033[1;31m", "\033[0m");

my $tree_prob = .01;
my $burn_prob = .001;

my @forest = map([ map((rand(1) < .5) ? 1 : 0, 1 .. $w) ], 1 .. $h);

sub iterate {
        my @new = map([ map(0, 1 .. $w) ], 1 .. $h);
        for my $i (0 .. $h - 1) {
        for my $j (0 .. $w - 1) {
                $new[$i][$j] = $forest[$i][$j];
                if ($forest[$i][$j] == 2) {
                        $new[$i][$j] = 0;
                } elsif ($forest[$i][$j] == 1) {
                        if (rand() < $burn_prob) {
                                $new[$i][$j] = 2;
                                next;
                        }
                        for (   [-1, -1], [-1, 0], [-1, 1],
                                [ 0, -1],          [ 0, 1],
                                [ 1, -1], [ 1, 0], [ 1, 1] )
                        {
                                my $y = $_->[0] + $i;
                                next if $y < 0 || $y >= $h;
                                my $x = $_->[1] + $j;
                                next if $x < 0 || $x >= $w;
                                if ($forest[$y][$x] == 2) {
                                        $new[$i][$j] = 2;
                                        last;
                                }
                        }
                } elsif (rand() < $tree_prob) {
                        $new[$i][$j] = 1;
                }
        }}
        @forest = @new;
}

sub forest {
        print $r;
        say $step;
        for (@forest) {
                for (@$_) {
                        when(0) { print "  "; }
                        when(1) { print "${green}木${norm}"}
                        when(2) { print "${red}火${norm}" }
                }
                print "\033[E\033[1G";
        }
        iterate;
}

print "\033[2J$norm";
forest while $step++ < $steps;
