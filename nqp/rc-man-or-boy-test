# Increase Parrot recursion limit, without breaking on other nqp backends
try { nqp::getcomp('nqp').eval('pir::getinterp__P().recursion_limit(100000)') }

sub A ($k, $x1, $x2, $x3, $x4, $x5) {
    my $B; $B := sub () { A(--$k, $B, $x1, $x2, $x3, $x4) };
    $k <= 0 ?? $x4() + $x5() !! $B();
}

sub MAIN(*@ARGS) {
    say(A(+@ARGS[1], my sub(){1}, my sub(){-1}, my sub(){-1},
                     my sub(){1}, my sub(){0}));
}